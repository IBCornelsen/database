import { Benutzer } from "./Benutzer"
import { GebaeudeStammdaten } from "./GebaeudeStammdaten"
import { Rechnungen } from "./Rechnungen"
import { Ausweisart, Ausstellgrund } from "main"
import { GebaeudeAufnahmeAllgemein } from "GebaeudeAufnahmeAllgemein"

model VerbrauchsausweisGewerbe {
  id                      Int            @id @default(autoincrement())
  uid                     String         @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  gebaeude_stammdaten_id  Int
  benutzer_id             Int
  rechnungen_id           Int?
  erstellungsdatum        DateTime?      @db.Timestamp(6)
  ausstellgrund           Ausstellgrund?
  registriernummer        String?        @db.VarChar
  erledigt                Boolean?
  zusaetzliche_heizquelle Boolean?
  brennstoff_1            String?        @db.VarChar(50)
  einheit_1               String?        @db.VarChar(50)
  brennstoff_2            String?        @db.VarChar(50)
  einheit_2               String?        @db.VarChar(50)
  startdatum              DateTime?      @db.Timestamp(6)
  verbrauch_1             Int?
  verbrauch_2             Int?
  verbrauch_3             Int?
  verbrauch_4             Int?
  verbrauch_5             Int?
  verbrauch_6             Int?

  strom_1 Int?
  strom_2 Int?
  strom_3 Int?

  stromverbrauch_enthaelt_heizung     Boolean?
  stromverbrauch_enthaelt_warmwasser  Boolean?
  stromverbrauch_enthaelt_lueftung    Boolean?
  stromverbrauch_enthaelt_beleuchtung Boolean?
  stromverbrauch_enthaelt_kuehlung    Boolean?
  stromverbrauch_enthaelt_sonstige    String?  @db.VarChar(50)

  kuehlung_enthalten Boolean?
  anteil_kuehlung_1  Float?
  anteil_kuehlung_2  Float?

  wird_gekuehlt Boolean?

  keller_beheizt Boolean?

  alternative_heizung    Boolean?
  alternative_warmwasser Boolean?
  alternative_lueftung   Boolean?
  alternative_kuehlung   Boolean?

  warmwasser_enthalten Boolean?
  anteil_warmwasser_1  Float?
  anteil_warmwasser_2  Float?

	gebaeudeaufnahme_allgemein_id        Int @unique

  benutzer            Benutzer           @relation(fields: [benutzer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  gebaeude_aufnahme_allgemein GebaeudeAufnahmeAllgemein @relation(fields: [gebaeudeaufnahme_allgemein_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  rechnungen          Rechnungen?        @relation(fields: [rechnungen_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
