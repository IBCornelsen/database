import { Benutzer } from "./Benutzer"
import { GebaeudeStammdaten } from "./GebaeudeStammdaten"
import { Rechnungen } from "./Rechnungen"
import { Ausstellgrund } from "main"
import { GebaeudeAufnahmeAllgemein } from "GebaeudeAufnahmeAllgemein"

model VerbrauchsausweisWohnen {
  id                        Int            @id @default(autoincrement())
  uid                       String         @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  benutzer_id               Int
  rechnungen_id             Int?
  erstellungsdatum          DateTime?      @default(now()) @db.Timestamp(6)
	ausstellungsdatum         DateTime?      @db.Timestamp(6)
	
  ausstellgrund             Ausstellgrund?
  registriernummer          String?        @db.VarChar
  erledigt                  Boolean?
  zusaetzliche_heizquelle   Boolean?
  einheit_1                 String?        @db.VarChar(50)
  einheit_2                 String?        @db.VarChar(50)
  startdatum                DateTime?      @db.Timestamptz(6)
  verbrauch_1               Int?
  verbrauch_2               Int?
  verbrauch_3               Int?
  verbrauch_4               Int?
  verbrauch_5               Int?
  verbrauch_6               Int?
  warmwasser_enthalten      Boolean?
  warmwasser_anteil_bekannt Boolean?

  wird_gekuehlt Boolean?

  keller_beheizt Boolean?
  faktorKeller  Float?

  alternative_heizung    Boolean?
  alternative_warmwasser Boolean?
  alternative_lueftung   Boolean?
  alternative_kuehlung   Boolean?

  anteil_warmwasser_1 Float?
  anteil_warmwasser_2 Float?

	gebaeudeaufnahme_allgemein_id Int @unique

  benutzer                    Benutzer                  @relation(fields: [benutzer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  gebaeude_aufnahme_allgemein GebaeudeAufnahmeAllgemein @relation(fields: [gebaeudeaufnahme_allgemein_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  rechnungen                  Rechnungen?               @relation(fields: [rechnungen_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
